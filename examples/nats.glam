-- Guarded recursive streams
consg x s = fold (x, s)
hdg     s = fst (unfold s)
tlg     s = snd (unfold s)

mapg f = let { m s = consg (f (hdg s)) (m <*> tlg s) } in m

-- Coinductive streams
cons x s = box (consg x (next (unbox s)))
hd     s = hdg (unbox s)
tl     s = box (prev (tlg (unbox s)))

-- The stream of natural numbers
natsg = consg 0 (mapg (\n. succ n) <$> natsg)
nats  = box natsg

-- Print the third natural number, i.e. 2
hd (tl (tl nats))
